// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

// TODO: For some reason it says that EWAULDBLOCK and EDEADLOCK are never used. Fix this
// in the compiler.
#![allow(dead_code)]

pub const EPERM           : ::arch::types::c_int = 1;
pub const ENOENT          : ::arch::types::c_int = 2;
pub const ESRCH           : ::arch::types::c_int = 3;
pub const EINTR           : ::arch::types::c_int = 4;
pub const EIO             : ::arch::types::c_int = 5;
pub const ENXIO           : ::arch::types::c_int = 6;
pub const E2BIG           : ::arch::types::c_int = 7;
pub const ENOEXEC         : ::arch::types::c_int = 8;
pub const EBADF           : ::arch::types::c_int = 9;
pub const ECHILD          : ::arch::types::c_int = 10;
pub const EAGAIN          : ::arch::types::c_int = 11;
pub const ENOMEM          : ::arch::types::c_int = 12;
pub const EACCES          : ::arch::types::c_int = 13;
pub const EFAULT          : ::arch::types::c_int = 14;
pub const ENOTBLK         : ::arch::types::c_int = 15;
pub const EBUSY           : ::arch::types::c_int = 16;
pub const EEXIST          : ::arch::types::c_int = 17;
pub const EXDEV           : ::arch::types::c_int = 18;
pub const ENODEV          : ::arch::types::c_int = 19;
pub const ENOTDIR         : ::arch::types::c_int = 20;
pub const EISDIR          : ::arch::types::c_int = 21;
pub const EINVAL          : ::arch::types::c_int = 22;
pub const ENFILE          : ::arch::types::c_int = 23;
pub const EMFILE          : ::arch::types::c_int = 24;
pub const ENOTTY          : ::arch::types::c_int = 25;
pub const ETXTBSY         : ::arch::types::c_int = 26;
pub const EFBIG           : ::arch::types::c_int = 27;
pub const ENOSPC          : ::arch::types::c_int = 28;
pub const ESPIPE          : ::arch::types::c_int = 29;
pub const EROFS           : ::arch::types::c_int = 30;
pub const EMLINK          : ::arch::types::c_int = 31;
pub const EPIPE           : ::arch::types::c_int = 32;
pub const EDOM            : ::arch::types::c_int = 33;
pub const ERANGE          : ::arch::types::c_int = 34;
pub const EDEADLK         : ::arch::types::c_int = 35;
pub const ENAMETOOLONG    : ::arch::types::c_int = 36;
pub const ENOLCK          : ::arch::types::c_int = 37;
pub const ENOSYS          : ::arch::types::c_int = 38;
pub const ENOTEMPTY       : ::arch::types::c_int = 39;
pub const ELOOP           : ::arch::types::c_int = 40;
pub const EWOULDBLOCK     : ::arch::types::c_int = ::arch::errno::EAGAIN;
pub const ENOMSG          : ::arch::types::c_int = 42;
pub const EIDRM           : ::arch::types::c_int = 43;
pub const ECHRNG          : ::arch::types::c_int = 44;
pub const EL2NSYNC        : ::arch::types::c_int = 45;
pub const EL3HLT          : ::arch::types::c_int = 46;
pub const EL3RST          : ::arch::types::c_int = 47;
pub const ELNRNG          : ::arch::types::c_int = 48;
pub const EUNATCH         : ::arch::types::c_int = 49;
pub const ENOCSI          : ::arch::types::c_int = 50;
pub const EL2HLT          : ::arch::types::c_int = 51;
pub const EBADE           : ::arch::types::c_int = 52;
pub const EBADR           : ::arch::types::c_int = 53;
pub const EXFULL          : ::arch::types::c_int = 54;
pub const ENOANO          : ::arch::types::c_int = 55;
pub const EBADRQC         : ::arch::types::c_int = 56;
pub const EBADSLT         : ::arch::types::c_int = 57;
pub const EDEADLOCK       : ::arch::types::c_int = ::arch::errno::EDEADLK;
pub const EBFONT          : ::arch::types::c_int = 59;
pub const ENOSTR          : ::arch::types::c_int = 60;
pub const ENODATA         : ::arch::types::c_int = 61;
pub const ETIME           : ::arch::types::c_int = 62;
pub const ENOSR           : ::arch::types::c_int = 63;
pub const ENONET          : ::arch::types::c_int = 64;
pub const ENOPKG          : ::arch::types::c_int = 65;
pub const EREMOTE         : ::arch::types::c_int = 66;
pub const ENOLINK         : ::arch::types::c_int = 67;
pub const EADV            : ::arch::types::c_int = 68;
pub const ESRMNT          : ::arch::types::c_int = 69;
pub const ECOMM           : ::arch::types::c_int = 70;
pub const EPROTO          : ::arch::types::c_int = 71;
pub const EMULTIHOP       : ::arch::types::c_int = 72;
pub const EDOTDOT         : ::arch::types::c_int = 73;
pub const EBADMSG         : ::arch::types::c_int = 74;
pub const EOVERFLOW       : ::arch::types::c_int = 75;
pub const ENOTUNIQ        : ::arch::types::c_int = 76;
pub const EBADFD          : ::arch::types::c_int = 77;
pub const EREMCHG         : ::arch::types::c_int = 78;
pub const ELIBACC         : ::arch::types::c_int = 79;
pub const ELIBBAD         : ::arch::types::c_int = 80;
pub const ELIBSCN         : ::arch::types::c_int = 81;
pub const ELIBMAX         : ::arch::types::c_int = 82;
pub const ELIBEXEC        : ::arch::types::c_int = 83;
pub const EILSEQ          : ::arch::types::c_int = 84;
pub const ERESTART        : ::arch::types::c_int = 85;
pub const ESTRPIPE        : ::arch::types::c_int = 86;
pub const EUSERS          : ::arch::types::c_int = 87;
pub const ENOTSOCK        : ::arch::types::c_int = 88;
pub const EDESTADDRREQ    : ::arch::types::c_int = 89;
pub const EMSGSIZE        : ::arch::types::c_int = 90;
pub const EPROTOTYPE      : ::arch::types::c_int = 91;
pub const ENOPROTOOPT     : ::arch::types::c_int = 92;
pub const EPROTONOSUPPORT : ::arch::types::c_int = 93;
pub const ESOCKTNOSUPPORT : ::arch::types::c_int = 94;
pub const EOPNOTSUPP      : ::arch::types::c_int = 95;
pub const EPFNOSUPPORT    : ::arch::types::c_int = 96;
pub const EAFNOSUPPORT    : ::arch::types::c_int = 97;
pub const EADDRINUSE      : ::arch::types::c_int = 98;
pub const EADDRNOTAVAIL   : ::arch::types::c_int = 99;
pub const ENETDOWN        : ::arch::types::c_int = 100;
pub const ENETUNREACH     : ::arch::types::c_int = 101;
pub const ENETRESET       : ::arch::types::c_int = 102;
pub const ECONNABORTED    : ::arch::types::c_int = 103;
pub const ECONNRESET      : ::arch::types::c_int = 104;
pub const ENOBUFS         : ::arch::types::c_int = 105;
pub const EISCONN         : ::arch::types::c_int = 106;
pub const ENOTCONN        : ::arch::types::c_int = 107;
pub const ESHUTDOWN       : ::arch::types::c_int = 108;
pub const ETOOMANYREFS    : ::arch::types::c_int = 109;
pub const ETIMEDOUT       : ::arch::types::c_int = 110;
pub const ECONNREFUSED    : ::arch::types::c_int = 111;
pub const EHOSTDOWN       : ::arch::types::c_int = 112;
pub const EHOSTUNREACH    : ::arch::types::c_int = 113;
pub const EALREADY        : ::arch::types::c_int = 114;
pub const EINPROGRESS     : ::arch::types::c_int = 115;
pub const ESTALE          : ::arch::types::c_int = 116;
pub const EUCLEAN         : ::arch::types::c_int = 117;
pub const ENOTNAM         : ::arch::types::c_int = 118;
pub const ENAVAIL         : ::arch::types::c_int = 119;
pub const EISNAM          : ::arch::types::c_int = 120;
pub const EREMOTEIO       : ::arch::types::c_int = 121;
pub const EDQUOT          : ::arch::types::c_int = 122;
pub const ENOMEDIUM       : ::arch::types::c_int = 123;
pub const EMEDIUMTYPE     : ::arch::types::c_int = 124;
pub const ECANCELED       : ::arch::types::c_int = 125;
pub const ENOKEY          : ::arch::types::c_int = 126;
pub const EKEYEXPIRED     : ::arch::types::c_int = 127;
pub const EKEYREVOKED     : ::arch::types::c_int = 128;
pub const EKEYREJECTED    : ::arch::types::c_int = 129;
pub const EOWNERDEAD      : ::arch::types::c_int = 130;
pub const ENOTRECOVERABLE : ::arch::types::c_int = 131;
pub const ERFKILL         : ::arch::types::c_int = 132;
pub const EHWPOISON       : ::arch::types::c_int = 133;
